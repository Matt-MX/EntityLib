// This class is generated by code-gen module. Do not edit manually.
//
package me.tofaa.entitylib.meta;

import static me.tofaa.entitylib.EntityLib.getApi;

import org.jetbrains.annotations.ApiStatus;

@ApiStatus.Internal
@SuppressWarnings("unused")
public final class MetaOffsetConverter {
    private MetaOffsetConverter() {
    }

    public static byte airTicksOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 47 && protocolVersion <= 47) {
            return 1;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte customNameOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 47 && protocolVersion <= 765) {
            return 2;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte customNameVisibleOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 47 && protocolVersion <= 765) {
            return 3;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte silentOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 47 && protocolVersion <= 765) {
            return 4;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte hasNoGravityOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 47 && protocolVersion <= 765) {
            return 5;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte poseOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 47 && protocolVersion <= 765) {
            return 6;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte ticksFrozenInPowderedSnowOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 47 && protocolVersion <= 765) {
            return 7;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte interpolationDelayOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 762 && protocolVersion <= 765) {
            return 8;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte transformationDurationOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 762 && protocolVersion <= 765) {
            return 9;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte positionRotationInterpolationDurationOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 10;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte translationOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 11;
        }
        if (protocolVersion >= 762 && protocolVersion <= 763) {
            return 10;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte scaleOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 12;
        }
        if (protocolVersion >= 762 && protocolVersion <= 763) {
            return 11;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte leftRotationOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 13;
        }
        if (protocolVersion >= 762 && protocolVersion <= 763) {
            return 12;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte rightRotationOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 14;
        }
        if (protocolVersion >= 762 && protocolVersion <= 763) {
            return 13;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte billboardConstraintsOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 15;
        }
        if (protocolVersion >= 762 && protocolVersion <= 763) {
            return 14;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte brightnessOverrideOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 16;
        }
        if (protocolVersion >= 762 && protocolVersion <= 763) {
            return 15;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte viewRangeOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 17;
        }
        if (protocolVersion >= 762 && protocolVersion <= 763) {
            return 16;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte shadowRadiusOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 18;
        }
        if (protocolVersion >= 762 && protocolVersion <= 763) {
            return 17;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte shadowStrengthOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 19;
        }
        if (protocolVersion >= 762 && protocolVersion <= 763) {
            return 18;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte widthOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 20;
        }
        if (protocolVersion >= 762 && protocolVersion <= 763) {
            return 19;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte heightOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 21;
        }
        if (protocolVersion >= 762 && protocolVersion <= 763) {
            return 20;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte glowColorOverrideOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 22;
        }
        if (protocolVersion >= 762 && protocolVersion <= 763) {
            return 21;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte blockIdOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 23;
        }
        if (protocolVersion >= 762 && protocolVersion <= 763) {
            return 22;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte itemOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 24;
        }
        if (protocolVersion >= 762 && protocolVersion <= 763) {
            return 23;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }

    public static byte displayTypeOffset() {
        int protocolVersion = getApi().getPacketEvents().getServerManager().getVersion().getProtocolVersion();
        if (protocolVersion >= 764 && protocolVersion <= 765) {
            return 25;
        }
        if (protocolVersion >= 762 && protocolVersion <= 763) {
            return 24;
        }
        throw new RuntimeException("Unknown protocol version for this method");
    }
}
